{"version":3,"sources":["components/BreadcrumbCus/index.js","pages/Grammar/index.js"],"names":["breadcrumbsConst","to","key","name","BreadcrumbCus","location","useState","breadcrumbs","setBreadcrumbs","useEffect","breadcrumb","find","page","pathname","className","breadcrumbsArr","result","length","map","index","Item","renderBreadcrumb","TabPane","Tabs","columns_grammar_01","title","dataIndex","render","data","data_grammar_01","verb","verbing","Grammar","console","log","span","offset","defaultActiveKey","tabPosition","tab","id","color","style","marginBottom","columns","dataSource","pagination"],"mappings":"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","file":"static/js/5.31702eef.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Breadcrumb } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './style.scss';\r\n\r\nconst breadcrumbsConst = [\r\n  {\r\n    to: '/grammar',\r\n    key: 'hoc-ngu-phap',\r\n    name: 'Học ngữ pháp',\r\n  },\r\n  {\r\n    to: '/exam',\r\n    key: 'thi-thu',\r\n    name: 'Thi thử',\r\n  },\r\n  {\r\n    to: '/exam/intro',\r\n    key: 'intro',\r\n    name: '',\r\n  },\r\n];\r\n\r\nconst renderBreadcrumb = breadcrumbsArr => {\r\n  let result = null;\r\n\r\n  if (breadcrumbsArr && breadcrumbsArr.length > 0) {\r\n    result = breadcrumbsArr.map(({ to, name, key }, index) => (\r\n      <Breadcrumb.Item key={key}>\r\n        <Link to={to}>{name}</Link>\r\n      </Breadcrumb.Item>\r\n    ));\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst BreadcrumbCus = ({ location }) => {\r\n  const [breadcrumbs, setBreadcrumbs] = useState([\r\n    {\r\n      to: '/',\r\n      key: 'trang-chu',\r\n      name: 'Trang chủ',\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const breadcrumb = breadcrumbsConst.find(\r\n      page => page.to === location.pathname,\r\n    );\r\n\r\n    setBreadcrumbs([...breadcrumbs, breadcrumb]);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"breadcrumb-cus\">\r\n      <Breadcrumb>{renderBreadcrumb(breadcrumbs)}</Breadcrumb>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbCus;\r\n","import React from 'react';\r\nimport { Row, Col, List, Tag, Table, Tabs } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.scss';\r\n\r\nimport BreadcrumbCus from '../../components/BreadcrumbCus';\r\n\r\nconst prefixCls = 'grammar';\r\nconst { TabPane } = Tabs;\r\n\r\nconst data = [\r\n  'Hiện tại đơn. Hiện tại tiếp diễn',\r\n  'Hiện tại hoàn thành',\r\n  'Quá khứ đơn',\r\n  'Quá khứ tiếp diễn',\r\n  'Tương lai đơn',\r\n];\r\n\r\nconst columns_grammar_01 = [\r\n  {\r\n    title: '',\r\n    dataIndex: 'name',\r\n    key: 'name',\r\n    render: name => <b>{name}</b>,\r\n  },\r\n  {\r\n    title: 'Hiện tại đơn',\r\n    dataIndex: 'verb',\r\n    key: 'verb',\r\n    render: data => (\r\n      <div>\r\n        <b>{data[0]}</b>\r\n        <br />\r\n        {data[1]}\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Hiện tại tiếp diễn',\r\n    dataIndex: 'verbing',\r\n    key: 'verbing',\r\n    render: data => (\r\n      <div>\r\n        <b>{data[0]}</b>\r\n        <br />\r\n        {data[1]}\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data_grammar_01 = [\r\n  {\r\n    key: '1',\r\n    name: '+',\r\n    verb: ['S + V(s/es)', 'He plays tennis.'],\r\n    verbing: ['S + am/is/are + Ving', 'The children are playing football now.'],\r\n  },\r\n  {\r\n    key: '1',\r\n    name: '-',\r\n    verb: ['S + do not/ does not + Vinf', \"She doesn't play tennis.\"],\r\n    verbing: [\r\n      'S + am/is/are + not + Ving',\r\n      'The children are not playing football now.',\r\n    ],\r\n  },\r\n  {\r\n    key: '1',\r\n    name: '?',\r\n    verb: ['Do/Does + S + Vinf?', 'Do you play tennis?'],\r\n    verbing: [\r\n      'Am/Is/Are + S + Ving?',\r\n      'Are the children playing football now?',\r\n    ],\r\n  },\r\n];\r\n\r\nconst Grammar = ({ location }) => {\r\n  console.log('location grammar page: ', location);\r\n\r\n  return (\r\n    <div className={`${prefixCls}`}>\r\n      <BreadcrumbCus location={location} />\r\n      <div className={`${prefixCls}-content`}>\r\n        <Row>\r\n          <Col span={16} offset={4}>\r\n            <Tabs\r\n              defaultActiveKey=\"1\"\r\n              // onChange={callback}\r\n              tabPosition=\"left\"\r\n            >\r\n              <TabPane tab=\"Hiện tại đơn. Hiện tại tiếp diễn\" key=\"1\">\r\n                <Row id=\"\">\r\n                  <h1>Hiện tại đơn. Hiện tại tiếp diễn</h1>\r\n                </Row>\r\n                <Row>\r\n                  <Tag color=\"blue\" style={{ marginBottom: '20px' }}>\r\n                    Cấu trúc\r\n                  </Tag>\r\n                </Row>\r\n                <Row>\r\n                  <Table\r\n                    columns={columns_grammar_01}\r\n                    dataSource={data_grammar_01}\r\n                    pagination={false}\r\n                  />\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane tab=\"Hiện tại hoàn thành\" key=\"2\">\r\n                <Row id=\"\">\r\n                  <h1>Hiện tại hoàn thành</h1>\r\n                </Row>\r\n                <Row>\r\n                  <Tag color=\"blue\" style={{ marginBottom: '20px' }}>\r\n                    Cấu trúc\r\n                  </Tag>\r\n                </Row>\r\n                <Row>\r\n                  <b>\r\n                    (+) S + has/have + PII.\r\n                    <br />\r\n                    (–) S + has/have + not + PII.\r\n                    <br />\r\n                    (?) Has/Have + S + PII?\r\n                    <br />\r\n                    Yes, S + has/have.\r\n                    <br />\r\n                    No, S + has/have + not.\r\n                  </b>\r\n                </Row>\r\n              </TabPane>\r\n              <TabPane tab=\"Quá khứ đơn\" key=\"3\">\r\n                Content of Tab Pane 3\r\n              </TabPane>\r\n              <TabPane tab=\"Quá khứ tiếp diễn\" key=\"4\">\r\n                Content of Tab Pane 4\r\n              </TabPane>\r\n              <TabPane tab=\"Tương lai đơn\" key=\"5\">\r\n                Content of Tab Pane 5\r\n              </TabPane>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n        {\r\n          // <Row>\r\n          //   <Col span={6} offset={2}>\r\n          //   \t<Row style= {{paddingRight : \"30px\"}}>\r\n          //   \t\t<List\r\n          //    bordered\r\n          //    dataSource={data}\r\n          //    renderItem={item => (\r\n          //      <List.Item>\r\n          //         <Link to=\"#\">{item}</Link>\r\n          //      </List.Item>\r\n          //    )}\r\n          //  />\r\n          //   \t</Row>\r\n          //   </Col>\r\n          //   <Col span={12}>\r\n          //   \t<Row id=\"\"><h1>Hiện tại đơn. Hiện tại tiếp diễn</h1></Row>\r\n          //   \t<Row><Tag color=\"blue\" style={{marginBottom : \"20px\"}}>Cấu trúc</Tag></Row>\r\n          //   \t<Row>\r\n          //   \t\t<Table columns={columns_grammar_01} dataSource={data_grammar_01} pagination={false}/>\r\n          //   \t</Row>\r\n          //   </Col>\r\n          // </Row>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grammar;\r\n"],"sourceRoot":""}