{"version":3,"sources":["utils/changeToSlug.js","components/Topic/index.js","pages/Topics/index.js"],"names":["changeToSlug","title","slug","toLowerCase","replace","Topic","_id","image","className","to","pathname","state","topicId","src","config","API_URL","alt","Topics","useState","topics","setTopics","useEffect","length","axios","method","url","then","res","data","results","catch","err","console","log","result","map","topic","index","key","renderTopic"],"mappings":"0NAoCeA,G,OApCM,SAAAC,GACnB,IAAKA,EACH,MAAO,GAGT,IAAIC,EAAOD,EAAME,cA4BjB,OAFAD,GADAA,EAAO,KAHPA,GADAA,GADAA,GADAA,GAJAA,GAHAA,GAHAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,EAAKE,QAAQ,qGAAyB,MACjCA,QAAQ,mEAAmB,MAC3BA,QAAQ,kCAAc,MACtBA,QAAQ,qGAAyB,MACjCA,QAAQ,qEAAmB,MAC3BA,QAAQ,mCAAa,MACrBA,QAAQ,WAAO,MAGfA,QAAQ,iCAAkC,KAG1CA,QAAQ,MAAO,MAIfA,QAAQ,eAAgB,MACxBA,QAAQ,aAAc,MACtBA,QAAQ,WAAY,MACpBA,QAAQ,SAAU,MAGV,KACRA,QAAQ,iBAAkB,M,QCFzBC,EAnBD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAON,EAAY,EAAZA,MAC3B,OACE,kBAAC,IAAD,CACEO,UAAS,UALG,SAMZC,GAAI,CACFC,SAAS,aAAD,OAAeV,EAAaC,IACpCU,MAAO,CACLC,QAASN,KAIb,yBAAKE,UAAS,UAbF,QAaE,gBACZ,yBAAKK,IAAG,UAAKC,IAAOC,SAAZ,OAAsBR,GAASS,IAAKf,KAE9C,4BAAKA,KCsBIgB,UA1BA,SAAC,GAAQ,qBACMC,mBAAS,IADhB,mBACdC,EADc,KACNC,EADM,KAgBrB,OAbAC,qBAAU,WACJF,EAAOG,QAAU,GACnBC,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKX,IAAOC,QAAZ,0BAEFW,MAAK,SAAAC,GACJP,EAAUO,EAAIC,KAAKC,QAAQV,WAE5BW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAE7B,IAGD,yBAAKvB,UAAS,UA7BA,WA8BZ,yBAAKA,UAAS,UA9BF,SA8BE,aACZ,oGACA,yBAAKA,UAAS,UAhCJ,SAgCI,kBA9BF,SAAAW,GAClB,IAAIe,EAAS,KAMb,OAJIf,GAAUA,EAAOG,OAAS,IAC5BY,EAASf,EAAOgB,KAAI,SAACC,EAAOC,GAAR,OAAkB,kBAAC,EAAD,eAAOC,IAAKD,GAAWD,QAGxDF,EAuB6CK,CAAYpB","file":"static/js/6.9a9c57c5.chunk.js","sourcesContent":["const changeToSlug = title => {\r\n  if (!title) {\r\n    return \"\";\r\n  }\r\n\r\n  let slug = title.toLowerCase();\r\n\r\n  //Đổi ký tự có dấu thành không dấu\r\n  slug = slug.replace(/[áàảạãăắằẳẵặâấầẩẫậ]/gi, \"a\");\r\n  slug = slug.replace(/[éèẻẽẹêếềểễệ]/gi, \"e\");\r\n  slug = slug.replace(/[iíìỉĩị]/gi, \"i\");\r\n  slug = slug.replace(/[óòỏõọôốồổỗộơớờởỡợ]/gi, \"o\");\r\n  slug = slug.replace(/[úùủũụưứừửữự]/gi, \"u\");\r\n  slug = slug.replace(/[ýỳỷỹỵ]/gi, \"y\");\r\n  slug = slug.replace(/đ/gi, \"d\");\r\n\r\n  //Xóa các ký tự đặc biệt\r\n  slug = slug.replace(/[`~!@#|$%^&()+=,.\\/?><'\":;_]/gi, \"\");\r\n\r\n  //Đổi khoảng trắng thành ký tự gạch ngang\r\n  slug = slug.replace(/ /gi, \"-\");\r\n\r\n  //Đổi nhiều ký tự gạch ngang liên tiếp thành 1 ký tự gạch ngang\r\n  //Phòng trường hợp người nhập vào quá nhiều ký tự trắng\r\n  slug = slug.replace(/\\-\\-\\-\\-\\-/gi, \"-\");\r\n  slug = slug.replace(/\\-\\-\\-\\-/gi, \"-\");\r\n  slug = slug.replace(/\\-\\-\\-/gi, \"-\");\r\n  slug = slug.replace(/\\-\\-/gi, \"-\");\r\n\r\n  //Xóa các ký tự gạch ngang ở đầu và cuối\r\n  slug = \"@\" + slug + \"@\";\r\n  slug = slug.replace(/\\@\\-|\\-\\@|\\@/gi, \"\");\r\n\r\n  return slug;\r\n};\r\n\r\nexport default changeToSlug;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './style.scss';\r\n\r\nimport changeToSlug from '../../utils/changeToSlug';\r\nimport config from '../../utils/config';\r\n\r\nconst prefixCls = 'topic';\r\n\r\nconst Topic = ({ _id, image, title }) => {\r\n  return (\r\n    <Link\r\n      className={`${prefixCls}`}\r\n      to={{\r\n        pathname: `/new-word/${changeToSlug(title)}`,\r\n        state: {\r\n          topicId: _id,\r\n        },\r\n      }}\r\n    >\r\n      <div className={`${prefixCls}-wrap-image`}>\r\n        <img src={`${config.API_URL}${image}`} alt={title} />\r\n      </div>\r\n      <h4>{title}</h4>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Topic;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './style.scss';\r\n\r\nimport Topic from '../../components/Topic';\r\nimport config from '../../utils/config';\r\n\r\nconst prefixCls = 'topics';\r\n\r\nconst renderTopic = topics => {\r\n  let result = null;\r\n\r\n  if (topics && topics.length > 0) {\r\n    result = topics.map((topic, index) => <Topic key={index} {...topic} />);\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst Topics = ({}) => {\r\n  const [topics, setTopics] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (topics.length <= 0) {\r\n      axios({\r\n        method: 'GET',\r\n        url: `${config.API_URL}/api/new-word-topics`,\r\n      })\r\n        .then(res => {\r\n          setTopics(res.data.results.topics);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`${prefixCls}`}>\r\n      <div className={`${prefixCls}-content`}>\r\n        <h1>Hôm nay bạn muốn học chủ đề nào?</h1>\r\n        <div className={`${prefixCls}-wrapped-list`}>{renderTopic(topics)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Topics;\r\n"],"sourceRoot":""}