{"version":3,"sources":["components/Card/index.js","pages/Flashcard/index.js"],"names":["Card","newWord","meaning","image","example","useState","isFlipped","setIsFlipped","handleClick","className","flipDirection","onClick","src","alt","style","color","Flashcard","match","topicId","location","state","newWords","setNewWords","carouselRef","useRef","useEffect","axios","method","url","config","API_URL","params","idTopic","then","res","data","results","catch","err","console","log","type","current","slick","slickPrev","slickNext","ref","result","length","map","index","key","renderNewWords"],"mappings":"4OAiCeA,G,OA1BF,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EACnBC,oBAAS,GADU,mBAC9CC,EAD8C,KACnCC,EADmC,KAG/CC,EAAc,kBAAMD,GAAcD,IAExC,OACE,yBAAKG,UAAS,UARA,SASZ,kBAAC,IAAD,CAAeH,UAAWA,EAAWI,cAAc,cACjD,yBAAKC,QAASH,EAAaC,UAAS,UAV1B,OAU0B,WAClC,yBAAKG,IAAKT,EAAOU,IAAKZ,KAGxB,yBAAKU,QAASH,EAAaC,UAAS,UAd1B,OAc0B,UAClC,uBAAGK,MAAO,CAAEC,MAAO,IAAMN,UAAS,UAf1B,OAe0B,cAAlC,wBACgBR,GAEhB,uBAAGa,MAAO,CAAEC,MAAO,IAAMN,UAAS,UAlB1B,OAkB0B,aAAlC,uBACiBP,GAEjB,uBAAGO,UAAS,UArBJ,OAqBI,aAAZ,qBAAmDL,Q,QC+C9CY,UAlDG,SAAC,GAKb,EAJJC,MAIK,IAFMC,EAEP,EAHJC,SACEC,MAASF,QAEP,EAI4Bb,mBAAS,IAJrC,mBAIGgB,EAJH,KAIaC,EAJb,KAMEC,EAAcC,iBAAO,MAoB3B,OAfAC,qBAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAI,GAAD,OAAKC,IAAOC,QAAZ,kBACHC,OAAQ,CACNC,QAASd,KAGVe,MAAK,SAAAC,GACJZ,EAAYY,EAAIC,KAAKC,QAAQf,aAG9BgB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAGD,yBAAK7B,UAAS,UA9CA,eA+CZ,yBAAKA,UAAS,UA/CF,aA+CE,aACZ,kBAAC,IAAD,CACEgC,KAAK,OACLhC,UAAS,UAlDD,aAkDC,QACTE,QAxBoB,kBAAMY,EAAYmB,QAAQC,MAAMC,eA0BtD,kBAAC,IAAD,CACEH,KAAK,QACLhC,UAAS,UAvDD,aAuDC,SACTE,QA5BgB,kBAAMY,EAAYmB,QAAQC,MAAME,eA8BlD,kBAAC,IAAD,CAAUC,IAAKvB,GAxDA,SAAAF,GACrB,IAAI0B,EAAS,KAQb,OANI1B,GAAYA,EAAS2B,OAAS,IAChCD,EAAS1B,EAAS4B,KAAI,SAAChD,EAASiD,GAAV,OACpB,kBAAC,EAAD,eAAMC,IAAKD,GAAWjD,QAInB8C,EA+C4BK,CAAe/B","file":"static/js/4.0fb4be59.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactCardFlip from 'react-card-flip';\r\n\r\nimport './style.scss';\r\n\r\nconst prefixCls = 'card';\r\n\r\nconst Card = ({ newWord, meaning, image, example }) => {\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  const handleClick = () => setIsFlipped(!isFlipped);\r\n\r\n  return (\r\n    <div className={`${prefixCls}`}>\r\n      <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\r\n        <div onClick={handleClick} className={`${prefixCls}-front`}>\r\n          <img src={image} alt={newWord} />\r\n        </div>\r\n\r\n        <div onClick={handleClick} className={`${prefixCls}-back`}>\r\n          <p style={{ color: '' }} className={`${prefixCls}-new-word`}>\r\n            Từ mới:&nbsp;{newWord}\r\n          </p>\r\n          <p style={{ color: '' }} className={`${prefixCls}-meaning`}>\r\n            Ý nghĩa:&nbsp;{meaning}\r\n          </p>\r\n          <p className={`${prefixCls}-example`}>Ví dụ:&nbsp;{example}</p>\r\n        </div>\r\n      </ReactCardFlip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Carousel, Icon } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport './style.scss';\r\n\r\nimport Card from '../../components/Card';\r\nimport config from '../../utils/config';\r\n\r\nconst prefixCls = 'flash-card';\r\n\r\nconst renderNewWords = newWords => {\r\n  let result = null;\r\n\r\n  if (newWords && newWords.length > 0) {\r\n    result = newWords.map((newWord, index) => (\r\n      <Card key={index} {...newWord} />\r\n    ));\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst Flashcard = ({\r\n  match,\r\n  location: {\r\n    state: { topicId },\r\n  },\r\n}) => {\r\n  // console.log('Flashcard match:', match);\r\n  // console.log('Flashcard location:', location);\r\n\r\n  const [newWords, setNewWords] = useState([]);\r\n\r\n  const carouselRef = useRef(null);\r\n\r\n  const handlePreviousSlide = () => carouselRef.current.slick.slickPrev();\r\n  const handleNextSlide = () => carouselRef.current.slick.slickNext();\r\n\r\n  useEffect(() => {\r\n    axios({\r\n      method: 'GET',\r\n      url: `${config.API_URL}/api/new-words`,\r\n      params: {\r\n        idTopic: topicId,\r\n      },\r\n    })\r\n      .then(res => {\r\n        setNewWords(res.data.results.newWords);\r\n        // console.log(res.data);\r\n      })\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`${prefixCls}`}>\r\n      <div className={`${prefixCls}-content`}>\r\n        <Icon\r\n          type=\"left\"\r\n          className={`${prefixCls}-pre`}\r\n          onClick={handlePreviousSlide}\r\n        />\r\n        <Icon\r\n          type=\"right\"\r\n          className={`${prefixCls}-next`}\r\n          onClick={handleNextSlide}\r\n        />\r\n        <Carousel ref={carouselRef}>{renderNewWords(newWords)}</Carousel>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flashcard;\r\n"],"sourceRoot":""}